Controlling multi-window with just only QWidget

from PyQt5.QtWidgets import QApplication, QVBoxLayout, QWidget, QPushButton, QLabel
from sys import argv


# Inhirit QWidget Class. We are using QWidget instead of
# QMainWindow because of the minimal UI features
class MainWindow(QWidget):
    def __init__(self):
        super(MainWindow, self).__init__()

        # Customize the main QWidget class
        # Notice that we use "self." directly
        self.resize(280, 200)

        # Items to be added to the main QWidget
        self.button = QPushButton("Hello World")
        self.label = QLabel("Hello Baby :)")

        # Before we add those items we must set what kind of
        # layout either horizontal or vertical
        self.layout = QVBoxLayout()

        # Add the items to the layout and wrap them all to setLayout
        # layout now contains all the items
        self.layout.addWidget(self.label)
        self.layout.addWidget(self.button)
        self.setLayout(self.layout)

        self.button.clicked.connect(self.magic)

        # WE are calling the other window
        self.newWindow()

    def newWindow(self):

        # We are now using a new QWidget class
        self.window2 = QWidget()

        # Styling the QWidget
        self.window2.setGeometry(450, 300, 530, 280)

        # Items to be added to QWidget()
        self.label2 = QLabel("Hello Window 2")

        self.window2.layout = QVBoxLayout()
        self.window2.layout.addWidget(self.label2)
        self.window2.setLayout(self.window2.layout)

        self.window2.show()

    def magic(self):
        self.label2.setText("Hello Paloloveee")


def main():
    app = QApplication(argv)

    window_a = MainWindow()
    window_a.show()

    app.exec_()


if __name__ == "__main__":
    main()
